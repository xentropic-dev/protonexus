name: Build and Publish
on:
  push:
    branches:
      - main

env:
  ZIG_VERSION: 0.14.1

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        include:
          - os: ubuntu-latest
            install-deps: |
              version="zig-x86_64-linux-$ZIG_VERSION"
              echo "$version"
              uri="https://ziglang.org/download/$ZIG_VERSION/$version.tar.xz"
              curl $uri -o zig-linux.tar.xz
              tar -xf zig-linux.tar.xz 
              rm zig-linux.tar.xz
              mv $version zig
              echo "Zig installed"
              echo "$PWD/zig/" >> $GITHUB_PATH
              ./zig/zig version
          - os: windows-latest
            install-deps: |
              $version = "zig-x86_64-windows-$env:ZIG_VERSION"
              Write-Output $version
              $uri = "https://ziglang.org/download/$env:ZIG_VERSION/$version.zip"
              Invoke-WebRequest -Uri "$uri" -OutFile ".\zig-windows.zip"
              Expand-Archive -Path ".\zig-windows.zip" -DestinationPath ".\" -Force
              Remove-Item -Path ".\zig-windows.zip"
              Rename-Item -Path ".\$version" -NewName ".\zig"
              Write-Host "Zig installed."
              Add-Content -Path $env:GITHUB_ENV -Value "PATH=.\zig\`;$env:PATH"
              .\zig\zig.exe version
          - os: macos-latest
            install-deps: |
              version="zig-x86_64-macos-$ZIG_VERSION"
              echo "$version"
              uri="https://ziglang.org/download/$ZIG_VERSION/$version.tar.xz"
              curl $uri -o zig-macos.tar.xz
              tar -xf zig-macos.tar.xz 
              rm zig-macos.tar.xz
              mv $version zig
              echo "Zig installed"
              echo "$PWD/zig/" >> $GITHUB_PATH
              ./zig/zig version
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Prepare
        run: |
          ${{ matrix.install-deps }}

      - name: Build web assets
        run: |
          cd client/protonexus
          npm ci
          npm run build

      - name: Build executable
        run: zig build --release=small 

      - name: Prepare artifact staging directory (Linux/macOS)
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: |
          rm -rf artifact/protonexus
          mkdir -p artifact/protonexus
          cp zig-out/bin/protonexus artifact/protonexus/
          cp -r client/protonexus/dist artifact/protonexus/public

      - name: Prepare artifact staging directory (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Remove-Item -Recurse -Force artifact\protonexus -ErrorAction SilentlyContinue
          New-Item -ItemType Directory -Force -Path artifact\protonexus
          Copy-Item zig-out\bin\protonexus.exe artifact\protonexus\
          Copy-Item -Recurse -Force client\protonexus\dist artifact\protonexus\public

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-protonexus
          path: artifact

